@inject IToastService Toast
@inject ILocalStorageService LocalStorage
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IAuthService AuthService
@inject IToastService ToastService

<h3>Login</h3>
<EditForm Model="user" OnValidSubmit="OnSubmitLogin">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <div>
        <label for="email">Email</label>
        <InputText id="email" @bind-Value="user.Email" class="form-control"></InputText>
    </div>
    <div>
        <label for="password">Password</label>
        <InputText id="password" @bind-Value="user.Password" type="password" class="form-control"></InputText>
    </div>
    <button type="submit" class="btn btn-success">Zaloguj</button>
    <ValidationSummary></ValidationSummary>
</EditForm>


@code {
    private UserLogin user = new UserLogin();
    private async void OnSubmitLogin()
    {
        var response = await AuthService.Login(user);
        if(response.Success)
        {
            Toast.ShowSuccess(response.Message, "Success");
            await LocalStorage.SetItemAsStringAsync("token", response.Data);
            await AuthenticationStateProvider.GetAuthenticationStateAsync();
        }
        else
        {
            Toast.ShowSuccess(response.Message, "Error");
        }

    }
}
